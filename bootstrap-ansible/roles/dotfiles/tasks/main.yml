---
- name: Ensure stow installed
  package:
    name: stow
    state: present
  become: true

- name: Check for repo .config next to playbook
  stat:
    path: "{{ playbook_dir }}/../.config"
  register: playbook_config

- name: Set dotfiles_clone_path to playbook parent (repo root) when present
  set_fact:
    dotfiles_clone_path: "{{ playbook_dir }}/.."
  when: playbook_config.stat.exists

- name: Clone dotfiles repo to fallback path if dotfiles not found next to playbook
  git:
    repo: "{{ dotfiles_repo_url }}"
    dest: "{{ dotfiles_clone_fallback }}"
    version: main
    update: yes
  become: false
  when: dotfiles_clone_path is not defined

- name: Set dotfiles_clone_path to fallback if not already set
  set_fact:
    dotfiles_clone_path: "{{ dotfiles_clone_fallback }}"
  when: dotfiles_clone_path is not defined

- name: Set dotfiles_source (the .config folder inside the clone)
  set_fact:
    dotfiles_source: "{{ dotfiles_clone_path }}/.config"

- name: Verify dotfiles_source exists
  stat:
    path: "{{ dotfiles_source }}"
  register: dotfiles_source_stat

- name: Fail if dotfiles_source missing
  fail:
    msg: "Dotfiles source not found at {{ dotfiles_source }}. Check dotfiles_clone_path or dotfiles repo."
  when: not dotfiles_source_stat.stat.exists

- name: Ensure user .config exists
  file:
    path: "{{ home_dir }}/.config"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0755'
  become: false

- name: Stat user's .config
  stat:
    path: "{{ home_dir }}/.config"
  register: user_config_stat
  become: false

- name: Backup existing ~/.config if it is a directory and not a symlink
  command: >
    mv "{{ home_dir }}/.config" "{{ home_dir }}/.config.bak.{{ lookup('pipe','date +%Y%m%d%H%M%S') }}"
  when:
    - user_config_stat.stat.exists
    - not user_config_stat.stat.islnk
  become: false

- name: Ensure clean ~/.config exists after backup
  file:
    path: "{{ home_dir }}/.config"
    state: directory
    owner: "{{ user_name }}"
    group: "{{ user_name }}"
    mode: '0755'
  become: false

- name: Stow .config package into user's home
  command: >
    stow -v -d "{{ dotfiles_clone_path }}" -t "{{ home_dir }}" ".config"
  args:
    chdir: "{{ dotfiles_clone_path }}"
  environment:
    HOME: "{{ home_dir }}"
  become: false

